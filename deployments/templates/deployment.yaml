apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-{{ .Values.name }}"
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.services.common.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      service: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        service: {{ .Values.name }}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: {{ .Chart.Name }}
                service: {{ .Values.name }}
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.services.common.imagePullPolicy }}
        env:
        - name: POSTGRES_URL
          value: postgres://{{ .Values.global.database.user }}:{{ .Values.global.database.password }}@{{ .Release.Name }}-database:{{ .Values.database.servicePort }}/{{ .Values.global.database.dbName }}
        - name: REDIS_URL
          value: redis://{{ .Release.Name }}-redis:{{ .Values.redis.servicePort }}
        - name: JWT_SECRET
          value: {{ .Values.global.jwtSecret }}
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
