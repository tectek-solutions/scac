networks:
  internal:
    driver: bridge

services:
  database:
    image: postgres:17.2-bookworm
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: scac
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  cache:
    image: redis:7.4.1-bookworm
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal

  # actions-service:
  #   build:
  #     context: .
  #     dockerfile: ./services/actions-service/Dockerfile
  #   expose:
  #     - "8000"
  #   environment:
  #     - RUST_LOG=info
  #     - BINDING_ADDRESS=0.0.0.0
  #     - BINDING_PORT=8000
  #     - POSTGRES_URL=postgres://postgres:postgres@database:5432/scac
  #     - JWT_SECRET="_3i6*yf&P+9^!;=;M*&vz5SOxE#EINj-j'N%_8SR]uBJ?[4KAoV=9Q^zRoS_)&o"
  #   networks:
  #     - internal

  # api-services-service:
  #   build:
  #     context: .
  #     dockerfile: ./services/api-services-service/Dockerfile
  #   expose:
  #     - "8000"
  #   environment:
  #     - RUST_LOG=info
  #     - BINDING_ADDRESS=0.0.0.0
  #     - BINDING_PORT=8000
  #     - POSTGRES_URL=postgres://postgres:postgres@database:5432/scac
  #     - JWT_SECRET="_3i6*yf&P+9^!;=;M*&vz5SOxE#EINj-j'N%_8SR]uBJ?[4KAoV=9Q^zRoS_)&o"
  #   networks:
  #     - internal

  # authentifications-service:
  #   build:
  #     context: .
  #     dockerfile: ./services/authentifications-service/Dockerfile
  #   expose:
  #     - "8000"
  #   environment:
  #     - RUST_LOG=info
  #     - BINDING_ADDRESS=0.0.0.0
  #     - BINDING_PORT=8000
  #     - POSTGRES_URL=postgres://postgres:postgres@database:5432/scac
  #     - JWT_SECRET="_3i6*yf&P+9^!;=;M*&vz5SOxE#EINj-j'N%_8SR]uBJ?[4KAoV=9Q^zRoS_)&o"
  #   networks:
  #     - internal

  # reactions-service:
  #   build:
  #     context: .
  #     dockerfile: ./services/reactions-service/Dockerfile
  #   expose:
  #     - "8000"
  #   environment:
  #     - RUST_LOG=info
  #     - BINDING_ADDRESS=0.0.0.0
  #     - BINDING_PORT=8000
  #     - POSTGRES_URL=postgres://postgres:postgres@database:5432/scac
  #     - JWT_SECRET="_3i6*yf&P+9^!;=;M*&vz5SOxE#EINj-j'N%_8SR]uBJ?[4KAoV=9Q^zRoS_)&o"
  #   networks:
  #     - internal

  # trigger-service:
  #   build:
  #     context: .
  #     dockerfile: ./services/trigger-service/Dockerfile
  #   expose:
  #     - "8000"
  #   environment:
  #     - RUST_LOG=info
  #     - BINDING_ADDRESS=0.0.0.0
  #     - BINDING_PORT=8000
  #     - POSTGRES_URL=postgres://postgres:postgres@database:5432/scac
  #     - JWT_SECRET="_3i6*yf&P+9^!;=;M*&vz5SOxE#EINj-j'N%_8SR]uBJ?[4KAoV=9Q^zRoS_)&o"
  #   networks:
  #     - internal

  # user-tokens-service:
  #   build:
  #     context: .
  #     dockerfile: ./services/user-tokens-service/Dockerfile
  #   expose:
  #     - "8000"
  #     - RUST_LOG=info
  #   environment:
  #     - BINDING_ADDRESS=0.0.0.0
  #     - BINDING_PORT=8000
  #     - POSTGRES_URL=postgres://postgres:postgres@database:5432/scac
  #     - JWT_SECRET="_3i6*yf&P+9^!;=;M*&vz5SOxE#EINj-j'N%_8SR]uBJ?[4KAoV=9Q^zRoS_)&o"
  #   networks:
  #     - internal

  users-service:
    build:
      context: .
      dockerfile: ./services/users-service/Dockerfile
    expose:
      - "8000"
    environment:
      - RUST_LOG=info
      - BINDING_ADDRESS=0.0.0.0
      - BINDING_PORT=8000
      - POSTGRES_URL=postgres://postgres:postgres@database:5432/scac
      - REDIS_URL=redis://cache:6379  
      - JWT_SECRET="_3i6*yf&P+9^!;=;M*&vz5SOxE#EINj-j'N%_8SR]uBJ?[4KAoV=9Q^zRoS_)&o"
    networks:
      - internal
    ports:
      - "9000:8000"
    depends_on:
      - database
      - cache


  # workflows-service:
  #   build:
  #     context: .
  #     dockerfile: ./services/workflows-service/Dockerfile
  #   expose:
  #     - "8000"
  #   environment:
  #     - RUST_LOG=info
  #     - BINDING_ADDRESS=0.0.0.0
  #     - BINDING_PORT=8000
  #     - POSTGRES_URL=postgres://postgres:postgres@database:5432/scac
  #     - JWT_SECRET="_3i6*yf&P+9^!;=;M*&vz5SOxE#EINj-j'N%_8SR]uBJ?[4KAoV=9Q^zRoS_)&o"
  #   networks:
  #     - internal

  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - RUST_LOG=info
      - ACTIONS_SERVICE_ADDRESS=actions-service
      - ACTIONS_SERVICE_PORT=8000
      - API_SERVICES_SERVICE_ADDRESS=api-services-service
      - API_SERVICES_SERVICE_PORT=8000
      - AUTHENTIFICATIONS_SERVICE_ADDRESS=authentifications-service
      - AUTHENTIFICATIONS_SERVICE_PORT=8000
      - REACTIONS_SERVICE_ADDRESS=reactions-service
      - REACTIONS_SERVICE_PORT=8000
      - TRIGGER_SERVICE_ADDRESS=trigger-service
      - TRIGGER_SERVICE_PORT=8000
      - USER_TOKENS_SERVICE_ADDRESS=user-tokens-service
      - USER_TOKENS_SERVICE_PORT=8000
      - USERS_SERVICE_ADDRESS=users-service
      - USERS_SERVICE_PORT=8000
      - WORKFLOWS_SERVICE_ADDRESS=workflows-service
      - WORKFLOWS_SERVICE_PORT=8000
      - BINDING_ADDRESS=0.0.0.0
      - BINDING_PORT=8000
    networks:
      - internal
    depends_on:
      # - actions-service
      # - api-services-service
      # - authentifications-service
      # - reactions-service
      # - trigger-service
      # - user-tokens-service
      - users-service
      # - workflows-service

  # client:
  #   build:
  #     context: .
  #     dockerfile: ./client/Dockerfile
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - API_GATEWAY_ADDRESS=api-gateway
  #     - API_GATEWAY_PORT=8000
  #   networks:
  #     - internal
  #   depends_on:
  #     - api-gateway
